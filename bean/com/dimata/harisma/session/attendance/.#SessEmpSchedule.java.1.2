/*
 * Session Name  	:  SessEmpSchedule.java
 * Created on 	:  [date] [time] AM/PM
 *
 * @author  	: karya
 * @version  	: 01
 */

/*******************************************************************
 * Class Description 	: [project description ... ]
 * Imput Parameters 	: [input parameter ...]
 * Output 		: [output ...]
 *******************************************************************/
package com.dimata.harisma.session.attendance;

import com.dimata.util.LogicParser;
import com.dimata.harisma.entity.search.SrcEmpSchedule;
import com.dimata.harisma.entity.attendance.PstEmpSchedule;
import com.dimata.harisma.entity.attendance.EmpSchedule;
import com.dimata.harisma.entity.employee.PstEmployee;
import com.dimata.harisma.entity.employee.Employee;
import com.dimata.harisma.entity.masterdata.*;
import com.dimata.system.entity.system.*;
import com.dimata.qdep.db.DBResultSet;
import com.dimata.qdep.db.DBHandler;

import java.util.Vector;
import java.util.GregorianCalendar;
import java.util.Date;
import java.sql.ResultSet;
 
/* java package */
 
public class SessEmpSchedule{
    public static final String SESS_SRC_EMPSCHEDULE = "SESSION_SRC_EMPSCHEDULE";
    //public static Vector searchEmpSchedule(SrcEmpSchedule srcempschedule, int start, int recordToGet){
    //Vector result = new Vector(1,1);
    //return result;
    private static Vector logicParser(String text) {
        Vector vector = LogicParser.textSentence(text);
        for(int i =0;i < vector.size();i++){
            String code =(String)vector.get(i);
            if(((vector.get(vector.size()-1)).equals(LogicParser.SIGN))&&
            ((vector.get(vector.size()-1)).equals(LogicParser.ENGLISH)))
                vector.remove(vector.size()-1);
        }
        return vector;
    }
    
    public static Vector searchEmpSchedule(SrcEmpSchedule srcempschedule, int start, int recordToGet) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        if (srcempschedule == null)
            return new Vector(1,1);
        
        try {
            String sql = " SELECT EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D1]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D3]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D4]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D5]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D6]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D7]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D8]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D9]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D10]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D11]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D12]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D13]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D14]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D15]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D16]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D17]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D18]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D19]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D20]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D21]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D22]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D23]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D24]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D25]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D26]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D27]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D28]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D29]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D30]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D31]+
            
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND1]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND2]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND3]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND4]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND5]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND6]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND7]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND8]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND9]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND10]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND11]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND12]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND13]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND14]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND15]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND16]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND17]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND18]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND19]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND20]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND21]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND22]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND23]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND24]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND25]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND26]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND27]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND28]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND29]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND30]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND31]+
            
            ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
            ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+            
            ", PRD."+PstPeriod.fieldNames[PstPeriod.FLD_PERIOD]+
            ", PRD."+PstPeriod.fieldNames[PstPeriod.FLD_START_DATE]+
            " FROM "+
            " "  +PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " EMPSCD "+
            " , "+PstEmployee.TBL_HR_EMPLOYEE + " EMP "+
            " , "+PstPeriod.TBL_HR_PERIOD +" PRD "+
            " WHERE "+
            " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
            " = PRD."+PstPeriod.fieldNames[PstPeriod.FLD_PERIOD_ID]+
            " AND EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            //added on Wed, 23-01-2003
            " AND EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+
            " = 0 ";
            
            String whereClause = "";
            if((srcempschedule.getEmployee()!= null)&& (srcempschedule.getEmployee().length()>0)){
                Vector vectName = logicParser(srcempschedule.getEmployee());
                if(vectName != null && vectName.size()>0){
                    //whereClause = whereClause + " AND (";
                    whereClause = whereClause + " (";
                    for(int i = 0; i <vectName.size();i++){
                        String str = (String)vectName.get(i);
                        if(!LogicParser.isInSign(str) && !LogicParser.isInLogEnglish(str)){
                            whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                            " LIKE '%"+str.trim()+"%' ";
                        }else{
                            whereClause = whereClause + str.trim();
                        }
                    }
                    whereClause = whereClause + ") AND ";
                }
            }
            
            //String s = "";
            //s = srcempschedule.getPeriod();
            //System.out.println("\tsrcempschedule.getPeriod() = " + srcempschedule.getPeriod());
            if(srcempschedule.getPeriod().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                " = "+srcempschedule.getPeriod() + " AND ";
            }
            
            //s = srcempschedule.getDepartment();
            if(srcempschedule.getDepartment().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+srcempschedule.getDepartment() + " AND ";
            }
            
            //s = srcempschedule.getPosition();
            //System.out.println("srcempschedule.getPosition() = " + srcempschedule.getPosition());
            if(srcempschedule.getPosition().compareToIgnoreCase("0") > 0) {
                //System.out.println("srcempschedule.getPosition() = " + srcempschedule.getPosition());
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                " = "+srcempschedule.getPosition() + " AND ";
            }
            
            if(srcempschedule.getSection().compareToIgnoreCase("0") > 0) {
                //System.out.println("srcempschedule.getSection() = " + srcempschedule.getSection());
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+srcempschedule.getSection() + " AND ";
            }
            
            /*
            if(srcEmployee.getDepartment() != 0)
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                                        " = "+srcEmployee.getDepartment() + " AND ";
             
             
            if(srcEmployee.getPosition() != 0)
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                                        " = "+ srcEmployee.getPosition() + " AND ";
             
             
            if(srcEmployee.getSection() != 0)
                whereClause = whereClause +" EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                                         " = "+ srcEmployee.getSection() + " AND ";
             */
            if(whereClause != null && whereClause.length()>0){
                //whereClause = whereClause.substring(0,whereClause.length()-4);
                //System.out.println("\twhereClause.length() = " + whereClause.length());
                whereClause += " 1 = 1 ";
                sql = sql + " AND " + whereClause;
            }
            
            //sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+ " LIMIT " + start + "," + recordToGet;
            sql = sql + " ORDER BY EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
            ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
            ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM]+
            ", EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID];
            
            if(start!=0 || recordToGet!=0)
            {
                sql = sql + " LIMIT " + start + "," + recordToGet;
            }
            
//            System.out.println("\t SQL searchEmpSchedule : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);   
                
                EmpSchedule empschedule = new EmpSchedule();
                Employee employee = new Employee();
                Period period = new Period();
                //                Department department = new Department();
                //                Position position = new Position();
                //                Section section = new Section();
                //                EmpCategory empcategory = new EmpCategory();
                //                Level level = new Level();
                
                empschedule.setOID(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]));
                empschedule.setPeriodId(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]));
                empschedule.setEmployeeId(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]));
                empschedule.setD1(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D1]));
                empschedule.setD2(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2]));
                empschedule.setD3(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D3]));
                empschedule.setD4(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D4]));
                empschedule.setD5(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D5]));
                empschedule.setD6(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D6]));
                empschedule.setD7(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D7]));
                empschedule.setD8(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D8]));
                empschedule.setD9(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D9]));
                empschedule.setD10(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D10]));
                empschedule.setD11(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D11]));
                empschedule.setD12(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D12]));
                empschedule.setD13(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D13]));
                empschedule.setD14(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D14]));
                empschedule.setD15(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D15]));
                empschedule.setD16(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D16]));
                empschedule.setD17(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D17]));
                empschedule.setD18(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D18]));
                empschedule.setD19(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D19]));
                empschedule.setD20(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D20]));
                empschedule.setD21(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D21]));
                empschedule.setD22(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D22]));
                empschedule.setD23(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D23]));
                empschedule.setD24(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D24]));
                empschedule.setD25(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D25]));
                empschedule.setD26(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D26]));
                empschedule.setD27(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D27]));
                empschedule.setD28(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D28]));
                empschedule.setD29(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D29]));
                empschedule.setD30(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D30]));
                empschedule.setD31(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D31]));
                
                empschedule.setD2nd1(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND1]));
                empschedule.setD2nd2(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND2]));
                empschedule.setD2nd3(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND3]));
                empschedule.setD2nd4(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND4]));
                empschedule.setD2nd5(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND5]));
                empschedule.setD2nd6(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND6]));
                empschedule.setD2nd7(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND7]));
                empschedule.setD2nd8(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND8]));
                empschedule.setD2nd9(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND9]));
                empschedule.setD2nd10(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND10]));
                empschedule.setD2nd11(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND11]));
                empschedule.setD2nd12(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND12]));
                empschedule.setD2nd13(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND13]));
                empschedule.setD2nd14(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND14]));
                empschedule.setD2nd15(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND15]));
                empschedule.setD2nd16(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND16]));
                empschedule.setD2nd17(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND17]));
                empschedule.setD2nd18(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND18]));
                empschedule.setD2nd19(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND19]));
                empschedule.setD2nd20(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND20]));
                empschedule.setD2nd21(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND21]));
                empschedule.setD2nd22(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND22]));
                empschedule.setD2nd23(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND23]));
                empschedule.setD2nd24(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND24]));
                empschedule.setD2nd25(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND25]));
                empschedule.setD2nd26(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND26]));
                empschedule.setD2nd27(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND27]));
                empschedule.setD2nd28(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND28]));
                empschedule.setD2nd29(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND29]));
                empschedule.setD2nd30(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND30]));
                empschedule.setD2nd31(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_D2ND31]));
                
                vect.add(empschedule);
                
                employee.setFullName(rs.getString(PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]));
                employee.setOID(rs.getLong(PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]));                
                vect.add(employee);
                
                period.setPeriod(rs.getString(PstPeriod.fieldNames[PstPeriod.FLD_PERIOD]));
                period.setStartDate(rs.getDate(PstPeriod.fieldNames[PstPeriod.FLD_START_DATE]));
                vect.add(period);
                
                result.add(vect);
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on searchEmpSchedule : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
    
    public static int getCountSearch(SrcEmpSchedule srcempschedule) {
        //int count = 1;
        //return count;
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        if (srcempschedule == null)
            return 0;
        
        try {
            String sql = " SELECT COUNT(EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]+") " +
            " FROM "+
            " "  +PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " EMPSCD "+
            " , "+PstEmployee.TBL_HR_EMPLOYEE + " EMP "+
            " , "+PstPeriod.TBL_HR_PERIOD +" PRD "+
            " WHERE "+
            " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
            " = PRD."+PstPeriod.fieldNames[PstPeriod.FLD_PERIOD_ID]+
            " AND EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            //added on Wed, 23-01-2003
            " AND EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+
            " = 0 ";
            
            String whereClause = "";
            if((srcempschedule.getEmployee()!= null)&& (srcempschedule.getEmployee().length()>0)){
                Vector vectName = logicParser(srcempschedule.getEmployee());
                if(vectName != null && vectName.size()>0){
                    //whereClause = whereClause + " AND (";
                    whereClause = whereClause + " (";
                    for(int i = 0; i <vectName.size();i++){
                        String str = (String)vectName.get(i);
                        if(!LogicParser.isInSign(str) && !LogicParser.isInLogEnglish(str)){
                            whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                            " LIKE '%"+str.trim()+"%' ";
                        }else{
                            whereClause = whereClause + str.trim();
                        }
                    }
                    whereClause = whereClause + ") AND ";
                }
            }
            
            //String s = "";
            //s = srcempschedule.getPeriod();
            if(srcempschedule.getPeriod().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                " = "+srcempschedule.getPeriod() + " AND ";
            }
            
            //s = srcempschedule.getDepartment();
            if(srcempschedule.getDepartment().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+srcempschedule.getDepartment() + " AND ";
            }
            
            //s = srcempschedule.getPosition();
            //System.out.println("srcempschedule.getPosition() = " + srcempschedule.getPosition());
            if(srcempschedule.getPosition().compareToIgnoreCase("0") > 0) {
                //System.out.println("srcempschedule.getPosition() = " + srcempschedule.getPosition());
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                " = "+srcempschedule.getPosition() + " AND ";
            }
            
            if(srcempschedule.getSection().compareToIgnoreCase("0") > 0) {
                //System.out.println("srcempschedule.getSection() = " + srcempschedule.getSection());
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+srcempschedule.getSection() + " AND ";
            }
            
            /*
            if(srcEmployee.getDepartment() != 0)
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                                        " = "+srcEmployee.getDepartment() + " AND ";
             
             
            if(srcEmployee.getPosition() != 0)
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                                        " = "+ srcEmployee.getPosition() + " AND ";
             
             
            if(srcEmployee.getSection() != 0)
                whereClause = whereClause +" EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                                         " = "+ srcEmployee.getSection() + " AND ";
             */
            if(whereClause != null && whereClause.length()>0){
                //whereClause = whereClause.substring(0,whereClause.length()-4);                
                whereClause += " 1 = 1 ";
                sql = sql + " AND " + whereClause;
            }
            
//            System.out.println("\t SQL getCountSearch : " + sql);  
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            int num = 0;
            while(rs.next()) {
                num = rs.getInt(1);
            }
            return num;
        } catch (Exception e) {
            System.out.println("\t Exception on getCountSearch : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return 0;
    }
    
    /* get manning based on year, month, date, department */
    public static int getManning(int year, int month, int date, long departmentId) {
        int count  = 0;
        DBResultSet dbrs = null;
        StringBuffer sql = new StringBuffer();
        sql.append(" SELECT COUNT(emp.employee_id) FROM ");
        sql.append(" hr_employee emp, hr_emp_schedule es, hr_department dep, hr_period per, ");
        sql.append(" hr_schedule_category c1, hr_schedule_symbol s1 ");
        sql.append(" WHERE ");
        sql.append(" dep.department_id = ");
        sql.append(departmentId);
        sql.append(" AND ");
        sql.append(" month(per.end_date) = ");
        sql.append(month);
        sql.append(" AND ");
        sql.append(" year(per.end_date) = "); 
        sql.append(year);
        sql.append(" AND ");
        sql.append(" emp.resigned = 0 AND ");
        sql.append(" emp.department_id = dep.department_id AND ");
        sql.append(" emp.employee_id = es.employee_id AND ");
        sql.append(" per.period_id = es.period_id AND ");
        sql.append(" es.d");
        sql.append(date);
        sql.append(" = s1.schedule_id AND ");
        sql.append(" c1.schedule_category_id = s1.schedule_category_id AND ");
        sql.append(" c1.category = 'Schedule Symbol' ");
        
        System.out.println("SQL getManning : " + sql);
        
        try {
            dbrs = DBHandler.execQueryResult(sql.toString());
            ResultSet rs = dbrs.getResultSet();
            while(rs.next()) {
                count = rs.getInt(1);
            }
            return count;
        } catch (Exception e) {
            System.out.println("\t Exception on getManning : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return 0;
    }
    
    public static int getTotalManning(long departmentId) {
        int count  = 0;
        DBResultSet dbrs = null;
        StringBuffer sql = new StringBuffer();
        sql.append(" SELECT COUNT(emp.employee_id) FROM ");
        sql.append(" hr_employee emp, hr_department dep ");
        sql.append(" WHERE ");
        sql.append(" dep.department_id = ");
        sql.append(departmentId);
        sql.append(" AND ");
        sql.append(" emp.resigned = 0 AND ");
        sql.append(" emp.department_id = dep.department_id ");
        
        //System.out.println("\t SQL getTotalManning : " + sql);
        
        try {
            dbrs = DBHandler.execQueryResult(sql.toString());
            ResultSet rs = dbrs.getResultSet();
            while(rs.next()) {
                count = rs.getInt(1);
            }
            return count;
        } catch (Exception e) {
            System.out.println("\t Exception on getTotalManning : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return 0;
    }
    
    
    
    /**
     * used to get schedule symbol with its category
     * @return
     * @created by Edhy
     */
    public static Vector getMasterSchedule() {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        try {
            String sql = "SELECT SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION] +
            " FROM " + PstScheduleSymbol.TBL_HR_SCHEDULE_SYMBOL + " AS SYM" +
            " INNER JOIN " + PstScheduleCategory.TBL_HR_SCHEDULE_CATEGORY + " AS CAT " +
            " ON SYM." + PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_CATEGORY_ID] +
            " = CAT." + PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID] +
            " ORDER BY SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL] ;
            
            //System.out.println("SQL MASTER SCHEDULE : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while(rs.next()) {
                Vector vect = new Vector(1,1);
                
                ScheduleSymbol scheduleSymbol = new ScheduleSymbol();
                ScheduleCategory scheduleCategory = new ScheduleCategory();
                
                scheduleSymbol.setOID(rs.getLong(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID]));
                scheduleSymbol.setSymbol(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL]));
                scheduleSymbol.setSchedule(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE]));
                scheduleSymbol.setTimeIn(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN]));
                scheduleSymbol.setTimeOut(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT]));
                vect.add(scheduleSymbol);
                
                scheduleCategory.setOID(rs.getLong(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID]));
                scheduleCategory.setCategoryType(rs.getInt(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE]));
                scheduleCategory.setCategory(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY]));
                scheduleCategory.setDescription(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION]));
                vect.add(scheduleCategory);
                
                result.add(vect);
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on getMasterSchedule : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
    

    /**
     * used to get schedule symbol with its category base on schedule category
     * @return
     * @created by Edhy
     */
    public static Vector getMasterSchedule(int intScheduleCategory) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);                
        try 
        {
            String sql = "SELECT SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION] +
            " FROM " + PstScheduleSymbol.TBL_HR_SCHEDULE_SYMBOL + " AS SYM" +
            " INNER JOIN " + PstScheduleCategory.TBL_HR_SCHEDULE_CATEGORY + " AS CAT " +
            " ON SYM." + PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_CATEGORY_ID] +
            " = CAT." + PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID];
            
            if(intScheduleCategory != PstScheduleCategory.CATEGORY_ALL)
            {
                sql = sql + " WHERE CAT." + PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE] + 
                      " = " + intScheduleCategory;
            }
            
            sql = sql + " ORDER BY SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL] ;
            
            //System.out.println("SQL MASTER SCHEDULE CATEGORY : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while(rs.next()) {
                Vector vect = new Vector(1,1);
                
                ScheduleSymbol scheduleSymbol = new ScheduleSymbol();
                ScheduleCategory scheduleCategory = new ScheduleCategory();
                
                scheduleSymbol.setOID(rs.getLong(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID]));
                scheduleSymbol.setSymbol(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL]));
                scheduleSymbol.setSchedule(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE]));
                scheduleSymbol.setTimeIn(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN]));
                scheduleSymbol.setTimeOut(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT]));
                vect.add(scheduleSymbol);
                
                scheduleCategory.setOID(rs.getLong(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID]));
                scheduleCategory.setCategoryType(rs.getInt(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE]));
                scheduleCategory.setCategory(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY]));
                scheduleCategory.setDescription(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION]));
                vect.add(scheduleCategory);
                
                result.add(vect);
            }
            
            return result;
        } 
        catch (Exception e) 
        {
            System.out.println("\t Exception on getMasterSchedule category : " + e);
        }
        finally 
        {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
    

    /**
     * used to get schedule symbol with its category base on schedule category
     * @return
     * @created by Edhy
     */
    public static Vector getMasterSchedule(Vector vectScheduleCategory) 
    {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);                
        
        String strScheduleCategory = "";
        if(vectScheduleCategory!=null && vectScheduleCategory.size()>0)
        {
            int maxVectScheduleCategory = vectScheduleCategory.size();
            for(int i=0; i<maxVectScheduleCategory; i++)
            {
                strScheduleCategory = strScheduleCategory + String.valueOf(vectScheduleCategory.get(i)) + ",";
            }
            
            if(strScheduleCategory!=null && strScheduleCategory.length()>0)
            {
                strScheduleCategory = strScheduleCategory.substring(0, strScheduleCategory.length()-1);
            }
        }
        
        try 
        {
            String sql = "SELECT SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN] +
            ", SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY] +
            ", CAT."+ PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION] +
            " FROM " + PstScheduleSymbol.TBL_HR_SCHEDULE_SYMBOL + " AS SYM" +
            " INNER JOIN " + PstScheduleCategory.TBL_HR_SCHEDULE_CATEGORY + " AS CAT " +
            " ON SYM." + PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_CATEGORY_ID] +
            " = CAT." + PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID] +
            " WHERE CAT." + PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE] + 
            " IN (" + strScheduleCategory + ")" +
            " ORDER BY SYM."+ PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL];
            
            //System.out.println("SQL MASTER SCHEDULE CATEGORY : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while(rs.next()) {
                Vector vect = new Vector(1,1);
                
                ScheduleSymbol scheduleSymbol = new ScheduleSymbol();
                ScheduleCategory scheduleCategory = new ScheduleCategory();
                
                scheduleSymbol.setOID(rs.getLong(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID]));
                scheduleSymbol.setSymbol(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SYMBOL]));
                scheduleSymbol.setSchedule(rs.getString(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE]));
                scheduleSymbol.setTimeIn(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN]));
                scheduleSymbol.setTimeOut(rs.getTime(PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_OUT]));
                vect.add(scheduleSymbol);
                
                scheduleCategory.setOID(rs.getLong(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_SCHEDULE_CATEGORY_ID]));
                scheduleCategory.setCategoryType(rs.getInt(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY_TYPE]));
                scheduleCategory.setCategory(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_CATEGORY]));
                scheduleCategory.setDescription(rs.getString(PstScheduleCategory.fieldNames[PstScheduleCategory.FLD_DESCRIPTION]));
                vect.add(scheduleCategory);
                
                result.add(vect);
            }
            
            return result;
        } 
        catch (Exception e) 
        {
            System.out.println("\t Exception on getMasterSchedule category : " + e);
        }
        finally 
        {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }

    
    /**
     * get list employee absence based on selected period
     * @param srcempschedule
     * @param
     * @param recordToGet
     * @return
     */    
    public static Vector listEmployeeAbsence(SrcEmpSchedule srcempschedule, int limitStart, int recordToGet)  
    {
        Vector result = new Vector(1,1);         
        DBResultSet dbrs = null;        
        if (srcempschedule == null)
        {    
            return new Vector(1,1);
        }            
        
        try 
        {
           String sql = "SELECT EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]+                        
                        ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM] +
                        ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+           
                        ", EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+           
                        " FROM "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " AS EMPSCD " +
                        " INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE + " AS EMP " +
                        " ON EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] +
                        " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID] +
                        " INNER JOIN "+PstPeriod.TBL_HR_PERIOD + " AS PRD " +
                        " ON EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] +
                        " = PRD."+PstPeriod.fieldNames[PstPeriod.FLD_PERIOD_ID];                        
            
           String whereClause = "";
           String statusClause = " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+"!=0";
           // khusus intimas 
           // jika bukan intimas buka komentra dibawah ini ( statusClause pake yang bawah )
           // Yunny
           /*String statusClause = " (EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";*/
            
            if((srcempschedule.getEmployee()!= null)&& (srcempschedule.getEmployee().length()>0))
            {
                Vector vectName = logicParser(srcempschedule.getEmployee());
                if(vectName != null && vectName.size()>0)
                {                    
                    whereClause = whereClause + " (";
                    for(int i = 0; i <vectName.size();i++)
                    {
                        String str = (String)vectName.get(i);
                        if(!LogicParser.isInSign(str) && !LogicParser.isInLogEnglish(str))
                        {
                            whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                            " LIKE '%"+str.trim()+"%' ";
                        }
                        else
                        {
                            whereClause = whereClause + str.trim();
                        }
                    }
                    whereClause = whereClause + ") AND ";
                }
            }            

            if(srcempschedule.getPeriod().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                " = "+srcempschedule.getPeriod() + " AND ";
            }            

            if(srcempschedule.getDepartment().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+srcempschedule.getDepartment() + " AND ";
            }            
            
            if(srcempschedule.getPosition().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                " = "+srcempschedule.getPosition() + " AND ";
            }
            
            if(srcempschedule.getSection().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+srcempschedule.getSection()+ " AND ";  
            }
            
            if(whereClause != null && whereClause.length()>0)
            {                
                sql = sql + " WHERE " + whereClause + statusClause;  
            }
            else
            {
                sql = sql + " WHERE " + statusClause;                  
            }
           
            sql = sql + " ORDER BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM]+
                        ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME];           

            if(limitStart == 0 && recordToGet == 0)    
            {
                sql = sql + "";
            }
            else
            {
                sql = sql + " LIMIT " + limitStart + ","+ recordToGet ;
            }            
            
            System.out.println("\t SQL listEmployeeAbsence : " + sql);              
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);                
                EmpSchedule empschedule = new EmpSchedule();
                Employee employee = new Employee();
                
                empschedule.setOID(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]));
                empschedule.setStatus1(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]));
                empschedule.setStatus2(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]));
                empschedule.setStatus3(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]));
                empschedule.setStatus4(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]));
                empschedule.setStatus5(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]));
                empschedule.setStatus6(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]));
                empschedule.setStatus7(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]));
                empschedule.setStatus8(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]));
                empschedule.setStatus9(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]));
                empschedule.setStatus10(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]));
                empschedule.setStatus11(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]));
                empschedule.setStatus12(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]));
                empschedule.setStatus13(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]));
                empschedule.setStatus14(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]));
                empschedule.setStatus15(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]));
                empschedule.setStatus16(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]));
                empschedule.setStatus17(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]));
                empschedule.setStatus18(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]));
                empschedule.setStatus19(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]));
                empschedule.setStatus20(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]));
                empschedule.setStatus21(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]));
                empschedule.setStatus22(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]));
                empschedule.setStatus23(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]));
                empschedule.setStatus24(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]));
                empschedule.setStatus25(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]));
                empschedule.setStatus26(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]));
                empschedule.setStatus27(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]));
                empschedule.setStatus28(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]));
                empschedule.setStatus29(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]));
                empschedule.setStatus30(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]));
                empschedule.setStatus31(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]));
                empschedule.setReason1(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]));
                empschedule.setReason2(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]));
                empschedule.setReason3(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]));
                empschedule.setReason4(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]));
                empschedule.setReason5(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]));
                empschedule.setReason6(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]));
                empschedule.setReason7(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]));
                empschedule.setReason8(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]));
                empschedule.setReason9(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]));
                empschedule.setReason10(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]));
                empschedule.setReason11(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]));
                empschedule.setReason12(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]));
                empschedule.setReason13(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]));
                empschedule.setReason14(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]));
                empschedule.setReason15(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]));
                empschedule.setReason16(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]));
                empschedule.setReason17(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]));
                empschedule.setReason18(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]));
                empschedule.setReason19(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]));
                empschedule.setReason20(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]));
                empschedule.setReason21(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]));
                empschedule.setReason22(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]));
                empschedule.setReason23(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]));
                empschedule.setReason24(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]));
                empschedule.setReason25(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]));
                empschedule.setReason26(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]));
                empschedule.setReason27(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]));
                empschedule.setReason28(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]));
                empschedule.setReason29(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]));
                empschedule.setReason30(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]));
                empschedule.setReason31(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]));
                vect.add(empschedule);
                
                employee.setEmployeeNum(rs.getString(PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM]));
                employee.setFullName(rs.getString(PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]));
                vect.add(employee);
                
                result.add(vect);
            }
            
            return result;
        } 
        catch (Exception e)    
        {
            System.out.println("\t Exception on listEmployeeAbsence : " + e);
        }
        finally 
        {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);        
    }
    

    /**
     * get list employee absence based on selected period
     * @param srcempschedule
     * @param
     * @param
     * @return
     */    
    public static int countEmployeeAbsence(SrcEmpSchedule srcempschedule)  
    {
        int result = 0;
        DBResultSet dbrs = null;                
        try 
        {
           String sql = "SELECT COUNT(EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMP_SCHEDULE_ID]+")"+                        
                        " FROM "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " AS EMPSCD " +
                        " INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE + " AS EMP " +
                        " ON EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] +
                        " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID] +
                        " INNER JOIN "+PstPeriod.TBL_HR_PERIOD + " AS PRD " +
                        " ON EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] +
                        " = PRD."+PstPeriod.fieldNames[PstPeriod.FLD_PERIOD_ID];                        
            
           String whereClause = "";
           String statusClause = " (EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR EMPSCD." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";
            
            if((srcempschedule.getEmployee()!= null)&& (srcempschedule.getEmployee().length()>0))
            {
                Vector vectName = logicParser(srcempschedule.getEmployee());
                if(vectName != null && vectName.size()>0)
                {                    
                    whereClause = whereClause + " (";
                    for(int i = 0; i <vectName.size();i++)
                    {
                        String str = (String)vectName.get(i);
                        if(!LogicParser.isInSign(str) && !LogicParser.isInLogEnglish(str))
                        {
                            whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                            " LIKE '%"+str.trim()+"%' ";
                        }
                        else
                        {
                            whereClause = whereClause + str.trim();
                        }
                    }
                    whereClause = whereClause + ") AND ";
                }
            }            

            if(srcempschedule.getPeriod().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMPSCD."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                " = "+srcempschedule.getPeriod() + " AND ";
            }            

            if(srcempschedule.getDepartment().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+srcempschedule.getDepartment() + " AND ";
            }            
            
            if(srcempschedule.getPosition().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_POSITION_ID]+
                " = "+srcempschedule.getPosition() + " AND ";
            }
            
            if(srcempschedule.getSection().compareToIgnoreCase("0") > 0) {
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+srcempschedule.getSection()+ " AND ";  
            }
            
            if(whereClause != null && whereClause.length()>0)
            {                
                sql = sql + " WHERE " + whereClause + statusClause;  
            }
            else
            {
                sql = sql + " WHERE " + statusClause;                  
            }           
           
//            System.out.println("\t SQL countEmployeeAbsence : " + sql);            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                result = rs.getInt(1);
            }            
            return result;
        } 
        catch (Exception e)    
        {
            System.out.println("\t Exception on countEmployeeAbsence : " + e);
        }
        finally 
        {
            DBResultSet.close(dbrs);
        }
        return 0;        
    }

    
    /** 
     * get list presence/attendance record per employee monthly
     * @param periodId
     * @param employeeId
     * @param departmentId
     * @return
     * @created by Edhy
     */    
    public static Vector listEmpPresenceMonthly(long departmentId, long periodId, long employeeId)
    {
        Vector result = new Vector(1,1);
        DBResultSet dbrs = null; 
        
        // get maximum date on selected periodId        
        Period schedulePeriod = new Period();
        int maxDayOnSelectedPeriod = 0;        
        try
        {
            PstPeriod pstPeriod = new PstPeriod();
            schedulePeriod = pstPeriod.fetchExc(periodId);              
            GregorianCalendar calenderWeek = new GregorianCalendar(schedulePeriod.getEndDate().getYear()+1900, schedulePeriod.getEndDate().getMonth(), 1);
            maxDayOnSelectedPeriod = calenderWeek.getActualMaximum(GregorianCalendar.DAY_OF_MONTH);                     
            System.out.println("periodId  "+periodId);
        }
        catch(Exception e)
        {
            System.out.println(">>> Exc fetch Period object on SessEmpSchedule : " + e.toString());
        }        
        
        try {
            String sql = "SELECT EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM];                         
                         
                         // schedule first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + i];                
                         }

                         // schedule second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                         // in first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i];                
                         }

                         // in second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                         // out first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i];                
                         }
            
                         // out second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                  sql += " FROM " + PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " AS SCH" +
                         " INNER JOIN " + PstEmployee.TBL_HR_EMPLOYEE + " AS EMP" +
                         " ON SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] +
                         " = EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID] +                          
                         " INNER JOIN " + PstDepartment.TBL_HR_DEPARTMENT + " AS DEPT" +
                         " ON EMP." + PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID] +
                         " = DEPT." + PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID] +                                                    
                         " WHERE SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] + 
                         " = " + periodId +                          
                         " AND DEPT." + PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID] + 
                         " = " + departmentId +
                         " AND SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] + 
                         " = " + employeeId +                         
                         " ORDER BY EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM];
                      
                System.out.println("\tlistEmpPresenceMonthlyN : "+sql);    
                dbrs = DBHandler.execQueryResult(sql);
                ResultSet rs = dbrs.getResultSet();     
                while(rs.next()) 
                {                                                                               
                    for(int i=0; i<maxDayOnSelectedPeriod; i++)
                    {                                         
                        Vector vectTemp = new Vector(1,1);                                        
                        
                        vectTemp.add(String.valueOf(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + i])));                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i]));
                        }                                                                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i]));
                        }                                                                                                
                        
                        vectTemp.add(String.valueOf(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));                        
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]));
                        }                                                                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]));
                        }                                                                                                
                        
                        result.add(vectTemp);                      
                    }                        
                }                
        }
        catch(Exception e) 
        {
            System.out.println("listEmpPresenceMonthly exc : "+e.toString());
            return result;
        }
        finally 
        {
            DBResultSet.close(dbrs);
            return result;  
        }                  
    }    
    
    
    /** 
     * get list presence/attendance record per employee monthly
     * @param periodId
     * @param employeeId
     * @param departmentId
     * @return
     * @created by Yunny
     */    
    public static Vector listEmpPresenceMonthlyDinamis(long departmentId, long periodId, long employeeId)
    {
        Vector result = new Vector(1,1);
        DBResultSet dbrs = null; 
        
        // get maximum date on selected periodId        
        Period schedulePeriod = new Period();
        int maxDayOnSelectedPeriod = 0;        
        try
        {
            PstPeriod pstPeriod = new PstPeriod();
            schedulePeriod = pstPeriod.fetchExc(periodId);              
            GregorianCalendar calenderWeek = new GregorianCalendar(schedulePeriod.getStartDate().getYear()+1900, schedulePeriod.getStartDate().getMonth(), 1);
            maxDayOnSelectedPeriod = calenderWeek.getActualMaximum(GregorianCalendar.DAY_OF_MONTH);                     
            System.out.println("maxDayOnSelectedPeriod  "+maxDayOnSelectedPeriod);
        }
        catch(Exception e)
        {
            System.out.println(">>> Exc fetch Period object on SessEmpSchedule : " + e.toString());
        }        
        
        try {
            String sql = "SELECT EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM];                         
                         
                         // schedule first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + i];                
                         }

                         // schedule second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                         // in first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i];                
                         }

                         // in second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                         // out first
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i];                
                         }
            
                         // out second
                         for(int i=0; i<maxDayOnSelectedPeriod; i++)
                         {
                            sql += ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i];                
                         }

                  sql += " FROM " + PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " AS SCH" +
                         " INNER JOIN " + PstEmployee.TBL_HR_EMPLOYEE + " AS EMP" +
                         " ON SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] +
                         " = EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID] +                          
                         " INNER JOIN " + PstDepartment.TBL_HR_DEPARTMENT + " AS DEPT" +
                         " ON EMP." + PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID] +
                         " = DEPT." + PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID] +                                                    
                         " WHERE SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] + 
                         " = " + periodId +                          
                         " AND DEPT." + PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID] + 
                         " = " + departmentId +
                         " AND SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] + 
                         " = " + employeeId +                         
                         " ORDER BY EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM];
                      
                System.out.println("\tlistEmpPresenceMonthlyD : "+sql);    
                dbrs = DBHandler.execQueryResult(sql);
                ResultSet rs = dbrs.getResultSet();     
                while(rs.next()) 
                {                                                                               
                    for(int i=0; i<maxDayOnSelectedPeriod; i++)
                    {                                         
                        Vector vectTemp = new Vector(1,1);                                        
                        
                        vectTemp.add(String.valueOf(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + i])));                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + i]));
                        }                                                                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + i]));
                        }                                                                                                
                        
                        vectTemp.add(String.valueOf(rs.getLong(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));                        
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]));
                        }                                                                                                
                        
                        if(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])!=null)
                        {                    
                            vectTemp.add(DBHandler.convertDate(rs.getDate(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]),rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i])));
                        }   
                        else
                        {
                            vectTemp.add(rs.getTime(PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + i]));
                        }                                                                                                
                        
                        result.add(vectTemp);                      
                    }                        
                }                
        }
        catch(Exception e) 
        {
            System.out.println("listEmpPresenceMonthly exc : "+e.toString());
            return result;
        }
        finally 
        {
            DBResultSet.close(dbrs);
            return result;  
        }                  
    }    
    
    
    /**
     * get list presence/attendance record per department daily
     * @param selectedDate
     * @param departmentId
     * @return
     * @created by Edhy
     */    
    public static Vector listEmpPresenceDaily(long departmentId, Date selectedDate,long sectionId)
    {
        Vector result = new Vector(1,1);
        DBResultSet dbrs = null; 
       // get index field on selectedDate        
        int idxFieldName = PstEmpSchedule.getIdxNameOfTableBySelectedDate(selectedDate);                
        
        // get periodId from selectedDate        
        long periodId = PstPeriod.getPeriodIdBySelectedDate(selectedDate);
        
        try {
            String sql = "SELECT EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM] +
                         ", EMP." + PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME] +            
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + idxFieldName - 1] +
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_CALENDAR + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + idxFieldName - 1] +                         
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + idxFieldName - 1] +
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_IN + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + idxFieldName - 1] +
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + idxFieldName - 1] +
                         ", SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.OFFSET_INDEX_OUT + PstEmpSchedule.INTERVAL_INDEX_HALF_CALENDAR + idxFieldName - 1] +                         
                         " FROM " + PstEmpSchedule.TBL_HR_EMP_SCHEDULE + " AS SCH" +
                         " INNER JOIN " + PstEmployee.TBL_HR_EMPLOYEE + " AS EMP" +
                         " ON SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID] +
                         " = EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID] +                          
                         " WHERE SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] + 
                         " = " + periodId;
            
                 if(departmentId!=0){
                      sql = sql + " AND EMP." + PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID] + 
                         " = " + departmentId ;
                 }
                 if(sectionId!=0){
                     sql = sql+" AND "+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                                " = "+sectionId;
                 }
            
                  sql = sql + " ORDER BY EMP." + PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_NUM];
  
                      
                System.out.println("\tlistEmpPresenceDaily : "+sql);
                java.sql.Date sqlCurrDate = new java.sql.Date(selectedDate.getYear(), selectedDate.getMonth(), selectedDate.getDate());
                java.sql.Date sqlNextDate = new java.sql.Date(selectedDate.getYear(), selectedDate.getMonth(), selectedDate.getDate()+1);                        
                dbrs = DBHandler.execQueryResult(sql);
                ResultSet rs = dbrs.getResultSet();     
                while(rs.next()) 
                {                
                    PresenceReportDaily presenceReportDaily = new PresenceReportDaily();                    
                    
                    String strEmpNum = rs.getString(1);
                    String strEmpName = rs.getString(2);
                    long firstSchedule = rs.getLong(3);
                    long secondSchedule = rs.getLong(4);                    
                    
                    // first schedule data
                    Vector vectFirstSchedule = PstScheduleSymbol.getScheduleData(firstSchedule, selectedDate);
                    String strSchedule1st = "";
                    int intCatSchedule1st = 0;
                    Date dtScheduleIn1st = null;
                    Date dtScheduleOut1st = null;
                    if(vectFirstSchedule!=null && vectFirstSchedule.size()>0)
                    {
                        Vector vectSchldTemp = (Vector)vectFirstSchedule.get(0);
                        strSchedule1st = String.valueOf(vectSchldTemp.get(0));
                        intCatSchedule1st = Integer.parseInt(String.valueOf(vectSchldTemp.get(1)));
                        dtScheduleIn1st = (Date)vectSchldTemp.get(2);
                        dtScheduleOut1st = (Date)vectSchldTemp.get(3);     					                        
                    }
                    
                    // second schedule data
                    Vector vectSecondSchedule = PstScheduleSymbol.getScheduleData(secondSchedule, selectedDate);
                    String strSchedule2nd = "";
                    int intCatSchedule2nd = 0;
                    Date dtScheduleIn2nd = null;
                    Date dtScheduleOut2nd = null;
                    if(vectSecondSchedule!=null && vectSecondSchedule.size()>0)
                    {
                        Vector vectSchldTemp = (Vector)vectSecondSchedule.get(0);
                        strSchedule2nd = String.valueOf(vectSchldTemp.get(0));
                        intCatSchedule2nd = Integer.parseInt(String.valueOf(vectSchldTemp.get(1)));
                        dtScheduleIn2nd = (Date)vectSchldTemp.get(2);
                        dtScheduleOut2nd = (Date)vectSchldTemp.get(3);     					                        
                    }
                    
                    presenceReportDaily.setEmpNum(strEmpNum);
                    presenceReportDaily.setEmpFullName(strEmpName);
                    presenceReportDaily.setSchldCategory1st(intCatSchedule1st);
                    presenceReportDaily.setScheduleSymbol1(strSchedule1st);
                    presenceReportDaily.setScheduleIn1st(dtScheduleIn1st);
                    presenceReportDaily.setScheduleOut1st(dtScheduleOut1st);
                    presenceReportDaily.setSchldCategory2nd(intCatSchedule2nd);
                    presenceReportDaily.setScheduleSymbol2(strSchedule2nd);
                    presenceReportDaily.setScheduleIn2nd(dtScheduleIn2nd);
                    presenceReportDaily.setScheduleOut2nd(dtScheduleOut2nd);                                        
                    
                    
                    if(rs.getTime(5)!=null)
                    {                    
                        presenceReportDaily.setActualIn1st(DBHandler.convertDate(rs.getDate(5),rs.getTime(5)));
                    }
                    else
                    {
                        presenceReportDaily.setActualIn1st(rs.getTime(5));
                    }                                                                                                                    

                    if(rs.getTime(6)!=null)
                    {                    
                        presenceReportDaily.setActualIn2nd(DBHandler.convertDate(rs.getDate(6),rs.getTime(6)));
                    }
                    else
                    {
                        presenceReportDaily.setActualIn2nd(rs.getTime(6));
                    }                                                                                                                    
                    
                    if(rs.getTime(7)!=null)
                    {                    
                        presenceReportDaily.setActualOut1st(DBHandler.convertDate(rs.getDate(7),rs.getTime(7)));
                    }
                    else
                    {
                        presenceReportDaily.setActualOut1st(rs.getTime(7));
                    }                                                                                                                    

                    if(rs.getTime(8)!=null)  
                    {                    
                        presenceReportDaily.setActualOut2nd(DBHandler.convertDate(rs.getDate(8),rs.getTime(8)));
                    }
                    else
                    {
                        presenceReportDaily.setActualOut2nd(rs.getTime(8));
                    }                                                                                                                    

                    result.add(presenceReportDaily);                      
                }                
        }
        catch(Exception e) 
        {
            System.out.println("listEmpPresenceDaily exc : "+e.toString());
            return result;
        }
        finally 
        {
            DBResultSet.close(dbrs);
            return result;  
        }                  
    }    
    
    
    /**
     * @param presenceStatus
     * @param presenceReason
     * @return
     */    
    public static int getAbsenceReason(int presenceStatus, int presenceReason)
    {
        int result = -1;
        
        if(presenceStatus == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)
        {
            switch(presenceReason)
            {
                case PstEmpSchedule.REASON_ABSENCE_ALPHA :
                     result = PstEmpSchedule.REASON_ABSENCE_ALPHA;
                     break;
                    
                case PstEmpSchedule.REASON_ABSENCE_SICKNESS :
                     result = PstEmpSchedule.REASON_ABSENCE_SICKNESS;
                     break;
                    
                case PstEmpSchedule.REASON_ABSENCE_DISPENSATION :                    
                     result = PstEmpSchedule.REASON_ABSENCE_DISPENSATION;
                     break;                    
            }
        }
        
        return result;
    }
    
     public static Vector getEmployeeReason(long departmentId,long oidSection,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
       // System.out.println("departmentName"+departmentName);
        if (departmentId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMP_CATEGORY_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+"=0";
           
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";
            
            
          
            if(departmentId!= 0){
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+departmentId+ " AND " ;
            }
            
             if(oidSection!= 0){
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+oidSection+ " AND " ;
            }
             
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause + statusClause;
                 //sql = sql + " WHERE " + whereClause;
            }
            else
            {
                sql = sql + " WHERE " + statusClause;                  
            }
            
             
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
            //System.out.println("\t SQL list getReason : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
                
                Employee employee = new Employee();
                Marital marital = new Marital();
                Religion religion = new Religion();
                EmpSchedule empSchedule = new EmpSchedule();
                
                employee.setOID(rs.getLong(PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]));
                employee.setFullName(rs.getString(PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]));
                employee.setCommencingDate(rs.getDate(PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]));
                employee.setEmpCategoryId(rs.getLong(PstEmployee.fieldNames[PstEmployee.FLD_EMP_CATEGORY_ID]));
                vect.add(employee);
                
                marital.setOID(rs.getLong(PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]));
                marital.setMaritalCode(rs.getString(PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]));
                vect.add(marital);
                
                religion.setOID(rs.getLong(PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]));
                religion.setReligion(rs.getString(PstReligion.fieldNames[PstReligion.FLD_RELIGION]));
                vect.add(religion);
               
                result.add(vect);
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
     
     public static Vector getEmployeeReasonYear(long departmentId,Vector currYear,long sectionId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
       // System.out.println("departmentName"+departmentName);
        if (departmentId == 0 && currYear==null)
            return new Vector(1,1);
         try {
            String sql = " SELECT DISTINCT (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+")"+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMP_CATEGORY_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+"=0";
                         
           
            String whereClause = "";
             String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";
            
             String wherePeriod = "";
          
            if(departmentId!= 0){
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
                " = "+departmentId+ " AND " ;
            }
            
             if(sectionId!= 0){
                whereClause = whereClause + " EMP."+PstEmployee.fieldNames[PstEmployee.FLD_SECTION_ID]+
                " = "+sectionId+ " AND " ;
            }
            
             if(currYear!=null && currYear.size()>0){
                
                 //whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+"=";
                 for (int i=0;i<currYear.size();i++){
                     Period prd = (Period)currYear.get(i);
                     long periodId = prd.getOID();
                     if(i==currYear.size()-1){
                     wherePeriod = wherePeriod + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+"="
                                    +periodId;
                     //System.out.println("terakhir  "+periodId);
                     }
                     else{
                     wherePeriod = wherePeriod + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+"="
                                    +String.valueOf(periodId)+" OR ";
                     }
                   // System.out.println("wherePeriod000000  ");
                 }
               // whereClause = whereClause +"("+wherePeriod+")";
                
                
             }
          
            if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause + " AND ("+wherePeriod+")" + statusClause ;
                 //sql = sql + " WHERE " + whereClause;
            }
             else
            {
                sql = sql + " WHERE " +" AND ("+ wherePeriod+")" +statusClause;                  
            }
            
             
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
          System.out.println("\t SQL SessEmpSchedule.getEmployeeReasonYear : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
                
                Employee employee = new Employee();
                Marital marital = new Marital();
                Religion religion = new Religion();
                EmpSchedule empSchedule = new EmpSchedule();
                
                employee.setOID(rs.getLong(PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]));
                employee.setFullName(rs.getString(PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]));
                employee.setCommencingDate(rs.getDate(PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]));
                employee.setEmpCategoryId(rs.getLong(PstEmployee.fieldNames[PstEmployee.FLD_EMP_CATEGORY_ID]));
                vect.add(employee);
                
                marital.setOID(rs.getLong(PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]));
                marital.setMaritalCode(rs.getString(PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]));
                vect.add(marital);
                
                religion.setOID(rs.getLong(PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]));
                religion.setReligion(rs.getString(PstReligion.fieldNames[PstReligion.FLD_RELIGION]));
                vect.add(religion);
               
                result.add(vect);
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  getEmployeeReasonYear : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
     
     public static Vector getAbsenceReason(long employeeId,long periodId,int reason) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
       // System.out.println("departmentName"+departmentName);
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
           
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";
            
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
           // System.out.println("\t SQL list getAbsence : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == reason) && (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                    result.add("1");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("2");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("3");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("4");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("5");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("6");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("7");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("8");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("9");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("10");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("11");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("12");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("13");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("14");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("15");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("16");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("17");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("18");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("19");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("20");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("21");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("22");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("23");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("24");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("25");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("26");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("27");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("28");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("29");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("30");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == reason)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
     
      public static Vector getEmpAbsence(long employeeId,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        /*nilai konstanta untu cuti dan ijin stengah hari..
         *khusus untuk intimas
         */
        int CM = 5;
        int CMR = 3;
        int CSTD = 4;
        int I_STHR = 15;
       // System.out.println("departmentName"+departmentName);
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
           
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +")";
            
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
           System.out.println("\t SQL getEmpAbsence : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                    result.add("1");
                }
                
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("2");
                }
                
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("3");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("4");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("5");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("6");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("7");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("8");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("9");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("10");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("11");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("12");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("13");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("14");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("15");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("16");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("17");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("18");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("19");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("20");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("21");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("22");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("23");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("24");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("25");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("26");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("27");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==I_STHR ))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("28");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("29");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("30");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==I_STHR))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
      /* this method created to get total employee's absences int meal allowance report
       * Created By Yunny
       */
       public static Vector getEmpAbsenceAllowance(long employeeId,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        /*nilai konstanta untu cuti dan ijin stengah hari..
         *khusus untuk intimas
         */
        int CM = 5;
        int CMR = 3;
        int CSTD = 4;
        int I_STHR = 15;
        int NEW = 8;
        int CLBRJDW = 12;
        int LBRJDW = 16;
        int LBRHR = 17;
        int NOAB = 7;
        
        //id dari karyawan yang dibayar penuh. Khusus untuk intimas
         //long oidPosEng = Long.parseLong(String.valueOf(PstSystemProperty.getValueByName("OID_KOMPRESSOR_POSITION")));
       // System.out.println("departmentName"+departmentName);
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_ABSENCE +" )";
                              
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
          // System.out.println("\t SQL getEmpAbsenceAllowance : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == LBRJDW) ||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                    result.add("1");
                }
                
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("2");
                }
                
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("3");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("4");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("5");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("6");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("7");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("8");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("9");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("10");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("11");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("12");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("13");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("14");
                }
                if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("15");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("16");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==NEW)|(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("17");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("18");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("19");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20])==LBRHR)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("20");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21])==LBRHR) ||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("21");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("22");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("23");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("24");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("25");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26])==LBRHR) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("26");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("27");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==I_STHR )||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("28");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("29");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("30");
                }
                 if(((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_ALPHA)|| (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_SICKNESS) || (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == PstEmpSchedule.REASON_ABSENCE_DISPENSATION)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CM)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CMR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])== CSTD)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==I_STHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==NEW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==CLBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==LBRJDW)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31])==LBRHR)||(rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == NOAB))&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)){
                     result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
       
      
       
       /* this method created to get total employee's absences int meal allowance report
       * Created By Yunny
       */
       public static Vector getEmpPresenceAllowance(long employeeId,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        /*nilai konstanta untu presence..
         *khusus untuk intimas
         */
        
        int ABT = 9;
        int ABRSK = 4;
        int TGS = 6;
        int NAB = 7;
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_OK +" )";
                              
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
          // System.out.println("\t SQL getEmpAbsenceAllowance : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("1");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("2");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("3");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("4");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("5");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("6");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("7");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("8");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("9");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("10");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("11");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("12");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("13");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("14");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("15");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("16");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("17");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("18");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("19");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("20");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("21");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("22");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("23");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("24");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("25");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("26");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("27");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("28");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("29");
                }
               if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("30");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_OK)){
                    result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
       
      /* This method used to get symbol id 
       * @ param oidEmp
       * @ dateSelected
       * created By Yunny
       */
        /*public static long getScheduleId(long oidEmp,Date selectedDate) {
        long result = 0;
        String sFieldDay = "D"+selectedDate.getDate();
        DBResultSet dbrs = null;
        long periodId = PstPeriod.getPeriodIdBySelectedDate(selectedDate);
        //String strDate = "\"" + Formater.formatDate(selectedDate, "yyyy-MM-dd") + "\"";
        try {
            String sql = "SELECT " + sFieldDay +" FROM "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+
                    " WHERE " +PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] +"="+periodId+
                    " AND "+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+"="+oidEmp;
            
            System.out.println("SessEmpSchedule.getScheduleId : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while (rs.next()) {
                result = rs.getLong(1);
            }
        } catch (Exception e) {
            return 0;
        } finally {
            DBResultSet.close(dbrs);
            return result;
        }
      }*/
        
        /* this method created to get total employee's late int meal allowance report
       * Created By Yunny
       */
       public static Vector getEmpLateAllowance(long employeeId,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +" )";
                              
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
          // System.out.println("\t SQL getEmpAbsenceAllowance : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("1");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("2");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("3");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("4");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("5");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("6");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("7");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("8");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("9");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("10");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("11");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("12");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("13");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("14");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("15");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("16");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("17");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("18");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("19");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("20");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("21");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("22");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("23");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("24");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("25");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("26");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("27");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("28");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("29");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("30");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_LATE)){
                    result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
       
        /* this method created to get total employee's late int meal allowance report
       * Created By Yunny
       */
       public static Vector getEmpWithoutRegAllowance(long employeeId,long periodId) {
        DBResultSet dbrs = null;
        Vector result = new Vector(1,1);
        int NAB = 7;
        
        if (employeeId == 0 && periodId==0)
            return new Vector(1,1);
         try {
            String sql = " SELECT EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+
                         ", EMP."+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         ", MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_CODE]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION_ID]+
                         ", REL."+PstReligion.fieldNames[PstReligion.FLD_RELIGION]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+
                         ", SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+
                         " FROM "+PstEmployee.TBL_HR_EMPLOYEE+ " AS EMP"+
                         " INNER JOIN "+PstMarital.TBL_HR_MARITAL+" AS MAR"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_MARITAL_ID]+
                         " = MAR."+PstMarital.fieldNames[PstMarital.FLD_MARITAL_ID]+
                         " INNER JOIN "+PstReligion.TBL_HR_RELIGION+ " AS REL"+
                         " ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " = REL."+PstEmployee.fieldNames[PstEmployee.FLD_RELIGION_ID]+
                         " INNER JOIN "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+ " AS SCH "+
                         " ON SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+
                         " = EMP. "+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
                         " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+"="+employeeId;
                         
            String whereClause = "";
            String statusClause = " AND  (SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]+ " = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +
                                " OR SCH." + PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]+" = " + PstEmpSchedule.STATUS_PRESENCE_LATE +" )";
                              
            
            if(periodId!= 0){
                      whereClause = whereClause + " SCH."+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+
                     " = "+periodId + " AND ";
            }
         
             if(whereClause != null && whereClause.length()>0){
                whereClause = " AND "+ whereClause.substring(0,whereClause.length()-4);
                sql = sql + whereClause;
                 //sql = sql + " WHERE " + whereClause;
            }
           /* else
            {
                sql = sql + " WHERE " + statusClause;                  
            }*/
            sql = sql + " GROUP BY EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID];
            
            //sql = sql + " LIMIT " + start + "," + recordToGet;
            
          // System.out.println("\t SQL getEmpAbsenceAllowance : " + sql);
            
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            
            while(rs.next()) {
                Vector vect = new Vector(1,1);
               
                EmpSchedule empSchedule = new EmpSchedule();
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS1]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE) && (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON1]) == NAB)){
                    result.add("1");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS2]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE) && (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON2]) == NAB)){
                    result.add("2");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS3]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON3]) == NAB)){
                    result.add("3");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS4]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE) &&  (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON4]) == NAB)){
                    result.add("4");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS5]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON5]) == NAB)){
                    result.add("5");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS6]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON6]) == NAB)){
                    result.add("6");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS7]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON7]) == NAB)){
                    result.add("7");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS8]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON8]) == NAB)){
                    result.add("8");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS9]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON9]) == NAB)){
                    result.add("9");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS10]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON10]) == NAB)){
                    result.add("10");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS11]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON11]) == NAB)){
                    result.add("11");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS12]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON12]) == NAB)){
                    result.add("12");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS13]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON13]) == NAB)){
                    result.add("13");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS14]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON14])) == NAB){
                    result.add("14");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS15]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON15]) == NAB)){
                    result.add("15");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS16]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON16]) == NAB)){
                    result.add("16");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS17]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON17]) == NAB)){
                    result.add("17");
                }
                
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS18]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON18]) == NAB)){
                    result.add("18");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS19]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON19]) == NAB)){
                    result.add("19");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS20]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON20]) == NAB)){
                    result.add("20");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS21]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON21]) == NAB)){
                    result.add("21");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS22]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON22]) == NAB)){
                    result.add("22");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS23]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON23]) == NAB)){
                    result.add("23");
                }
                if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS24]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON24]) == NAB)){
                    result.add("24");
                }
                 if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS25]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON25]) == NAB)){
                    result.add("25");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS26]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON26]) == NAB)){
                    result.add("26");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS27]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON27]) == NAB)){
                    result.add("27");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS28]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON28]) == NAB)){
                    result.add("28");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS29]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON29]) == NAB)){
                    result.add("29");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS30]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON30]) == NAB)){
                    result.add("30");
                }
                  if((rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_STATUS31]) == PstEmpSchedule.STATUS_PRESENCE_ABSENCE)&& (rs.getInt(PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_REASON31]) == NAB)){
                    result.add("31");
                }
                
            }
            
            return result;
        } catch (Exception e) {
            System.out.println("\t Exception on  searchEmployee : " + e);
        }
        finally {
            DBResultSet.close(dbrs);
        }
        return new Vector(1,1);
        
    }
       
      /* This method used to get symbol id 
       * @ param oidEmp
       * @ dateSelected
       * created By Yunny
       */
        public static long getScheduleId(long oidEmp,Date selectedDate) {
        long result = 0;
        String sFieldDay = "D"+selectedDate.getDate();
        DBResultSet dbrs = null;
        long periodId = PstPeriod.getPeriodIdBySelectedDate(selectedDate);
        //String strDate = "\"" + Formater.formatDate(selectedDate, "yyyy-MM-dd") + "\"";
        try {
            String sql = "SELECT " + sFieldDay +" FROM "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+
                    " WHERE " +PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID] +"="+periodId+
                    " AND "+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+"="+oidEmp;
            
            //System.out.println("SessEmpSchedule.getScheduleId : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while (rs.next()) {
                result = rs.getLong(1);
            }
        } catch (Exception e) {
            return 0;
        } finally {
            DBResultSet.close(dbrs);
            return result;
        }
      }
        
        /* This method used to get time in of schedule id
         * @ param oidEmp
        * @ dateSelected
        * created By Yunny
        */
        public static Date getTimeIn(long oidEmp,Date selectedDate) {
        Date result = new Date();
        DBResultSet dbrs = null;
        long scheduleId = SessEmpSchedule.getScheduleId(oidEmp,selectedDate);
        //String strDate = "\"" + Formater.formatDate(selectedDate, "yyyy-MM-dd") + "\"";
        try {
            String sql = "SELECT " +PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_TIME_IN] +" FROM "+PstScheduleSymbol.TBL_HR_SCHEDULE_SYMBOL+
                    " WHERE " +PstScheduleSymbol.fieldNames[PstScheduleSymbol.FLD_SCHEDULE_ID] +"="+scheduleId;
                    
            //System.out.println("SessEmpSchedule.getTimeIn : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while (rs.next()) {
                result = rs.getTime(1);
            }
        } catch (Exception e) {
            return new Date();
        } finally {
            DBResultSet.close(dbrs);
            return result;
        }
      }
       
       
      /* this method used to get time in and time out
       * param @ dateSelected
       * param @ empOid
       * created By Yunny
       */
       public static Date getTimeOut(Date dateSelected,long empOid){
        DBResultSet dbrs = null;
        Date dateResult = new Date();
        long periodId = PstPeriod.getPeriodIdBySelectedDate(dateSelected);
            try{
                String sFieldIn = "IN"+dateSelected.getDate();
                
                
                String sql = " SELECT "+sFieldIn+" FROM "+PstEmpSchedule.TBL_HR_EMP_SCHEDULE+
                             " WHERE "+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_EMPLOYEE_ID]+"="+empOid+
                             " AND "+PstEmpSchedule.fieldNames[PstEmpSchedule.FLD_PERIOD_ID]+"="+periodId;
                //System.out.println("SQL SessEmpSchedule.getTimeOut() :::::: "+sql);
                dbrs = DBHandler.execQueryResult(sql);
                ResultSet rs = dbrs.getResultSet();
                while(rs.next()){
                    dateResult = rs.getTime(1);
                }
                
                } catch (Exception e) {
                return new Date();
            } finally {
                DBResultSet.close(dbrs);
                return dateResult;
            }
          }
       
       /* This method used to get duration hours time in, time out
       * @ param hoursSchedule
       * @ param hoursReal
       * created By Yunny
       */
        public static int getDurationHours(int hoursSchedule,int hoursReal ) {
        int result = 0;
        DBResultSet dbrs = null;
        try {
            String sql = "SELECT (" +hoursSchedule+"-"+hoursReal+")" ;
            System.out.println("SessEmpSchedule.getDurationHours : "+sql);
            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();
            while (rs.next()) {
                result = rs.getInt(1);
            }
        } catch (Exception e) {
            return 0;
        } finally {
            DBResultSet.close(dbrs);
            return result;
        }
      }
        
        /* This method used to get duration minutes time in, time out
       * @ param minutesSchedule
       * @ param minutesReal
       * created By Yunny
       */
        public static int getDurationMinutes(int minutesSchedule,int minutesReal ) {
        int result = 0;
        DBResultSet dbrs = null;
            try {
                String sql = "SELECT (" +minutesSchedule+"-"+minutesReal+")" ;
                System.out.println("SessEmpSchedule.getDurationMinutes : "+sql);
                dbrs = DBHandler.execQueryResult(sql);
                ResultSet rs = dbrs.getResultSet();
                while (rs.next()) {
                    result = rs.getInt(1);
                }
            } catch (Exception e) {
                return 0;
            } finally {
                DBResultSet.close(dbrs);
                return result;
            }
          }
       
}
