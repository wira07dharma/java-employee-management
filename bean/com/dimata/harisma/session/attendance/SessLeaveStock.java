/* Generated by Together */

package com.dimata.harisma.session.attendance;

/* java package */ 
import java.io.*; 
import java.util.*; 
import java.sql.*;
import javax.servlet.*;
import javax.servlet.http.*; 
/* qdep package */ 
import com.dimata.util.*;
import com.dimata.qdep.form.*;
import com.dimata.qdep.db.*;
/* project package */
//import com.dimata.harisma.db.DBException;
//import com.dimata.harisma.db.DBHandler;
import com.dimata.harisma.entity.search.*;
import com.dimata.harisma.form.search.*;
import com.dimata.harisma.entity.attendance.*;
import com.dimata.harisma.entity.employee.*;
import com.dimata.harisma.entity.masterdata.*;

public class SessLeaveStock {

    public static Vector getLeaveStock(long departmentOID, String empName, int start, int recordToGet){
         DBResultSet dbrs = null;
         Vector result = new Vector(1,1);
         try{

            String sql = "SELECT * FROM "+PstEmployee.TBL_HR_EMPLOYEE +" EMP "+
            " LEFT JOIN "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
			" ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
			" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID];

            /*String sql = "SELECT * FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
			" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
			" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]; */

            if(departmentOID!=0){
				sql = sql + " WHERE (DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+"="+departmentOID+")";
            }

            if(empName!=null && empName.length()>0){
                if(departmentOID!=0){
                    sql = sql + " AND ("+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+" LIKE \"%"+empName+"%\")";
                }
                else{
                    sql = sql + " WHERE ("+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+" LIKE \"%"+empName+"%\")";
                }
            }
            
            sql = sql + " AND ("+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

            if(recordToGet>0){
                sql = sql + " LIMIT "+start+","+recordToGet;
            }

            System.out.println("-----------------------------------------------------------");
            System.out.println("masuk ke sinikah????---------> "+sql);
            System.out.println("-----------------------------------------------------------");

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            while(rs.next()){
                Vector vct = new Vector(1,1);
                Employee emp = new Employee();
                PstEmployee.resultToObject(rs, emp);

                vct.add(emp);

				LeaveStock leaveStock = new LeaveStock();
                PstLeaveStock.resultToObject(rs, leaveStock);

                vct.add(leaveStock);

                result.add(vct);

            }

            rs.close();

         }
         catch(Exception e){
            System.out.println("Exception e : "+e.toString());
         }
         finally{
            DBResultSet.close(dbrs);
            return result;
         }
    }


    public static int getCount(long departmentOID, String empName){
         DBResultSet dbrs = null;
         int result = 0;
         try{

            String sql = "SELECT COUNT(EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+") FROM "+PstEmployee.TBL_HR_EMPLOYEE +" EMP "+
            " LEFT JOIN "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
			" ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
			" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID];

           /* String sql = "SELECT COUNT("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_LEAVE_STOCK_ID]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
			" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
			" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
            " = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID];*/

            if(departmentOID!=0){
				sql = sql + " WHERE (DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+"="+departmentOID+")";
            }

            if(empName!=null && empName.length()>0){
                if(departmentOID!=0){
                    sql = sql + " AND ("+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+" LIKE \"%"+empName+"%\")";
                }
                else{
                    sql = sql + " WHERE ("+PstEmployee.fieldNames[PstEmployee.FLD_FULL_NAME]+" LIKE \"%"+empName+"%\")";
                }
            }

            sql = sql + " AND ("+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

            //System.out.println("------------------------------------------------- ");
            //System.out.println("---------> "+sql);
            //System.out.println("-------------------------------------------------- ");

            dbrs = DBHandler.execQueryResult(sql);
            ResultSet rs = dbrs.getResultSet();

            while(rs.next()){
				result = rs.getInt(1);
            }

            rs.close();

         }
         catch(Exception e){
            System.out.println("Exception e : "+e.toString());
         }
         finally{
            DBResultSet.close(dbrs);
            return result;
         }
    }


    public static int getTotalDpByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_DP_AMOUNT]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");

				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }


    public static int getTotalAlByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_AL_AMOUNT]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");
	
				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }

    public static int getTotalLlByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_LL_AMOUNT]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");
	
				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }


    public static int getTotalAddDpByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_ADD_DP]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
					//" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
		            //" = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");
	
				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }

    public static int getTotalAddAlByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_ADD_AL]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
					//" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
		            //" = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");
	
				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }

    public static int getTotalAddLlByDepartment(long departmentOID){
        DBResultSet dbrs = null;
        int result = 0;
        if(departmentOID!=0){
            try{
		         String sql = "SELECT SUM("+PstLeaveStock.fieldNames[PstLeaveStock.FLD_ADD_LL]+") FROM "+PstLeaveStock.TBL_HR_LEAVE_STOCK+"  AS STOCK "+
					" INNER JOIN "+PstEmployee.TBL_HR_EMPLOYEE+" AS EMP ON EMP."+PstEmployee.fieldNames[PstEmployee.FLD_EMPLOYEE_ID]+
		            " = STOCK."+PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+
					//" INNER JOIN "+PstDepartment.TBL_HR_DEPARTMENT+" AS DEP ON DEP."+PstDepartment.fieldNames[PstDepartment.FLD_DEPARTMENT_ID]+
		            //" = EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+
		            " WHERE EMP."+PstEmployee.fieldNames[PstEmployee.FLD_DEPARTMENT_ID]+"="+departmentOID;

                 sql = sql + " AND (EMP."+PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+" = 0)";

                 System.out.println("----------------------");
				 System.out.println(sql);
                 System.out.println("----------------------");
	
				 dbrs = DBHandler.execQueryResult(sql);
	             ResultSet rs = dbrs.getResultSet();
	             while (rs.next()){
	                result = rs.getInt(1);
	             }
	
	             rs.close();
            }
            catch(Exception e){
                System.out.println(e.toString());
            }
            finally{
                DBResultSet.close(dbrs);

            }

        }

        return result;
    }


    public static void main(String args[]){
        try{
            Vector vct = PstEmployee.listAll();
            for(int i=0; i<vct.size(); i++){
                Employee emp = (Employee)vct.get(i);
                LeaveStock lstock = new LeaveStock();
                lstock.setEmployeeId(emp.getOID());
                PstLeaveStock.insertExc(lstock);
            }
        }
        catch(Exception e){
        }
    }


}
