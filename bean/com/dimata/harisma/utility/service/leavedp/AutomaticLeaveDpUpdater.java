/* Generated by Together */

package com.dimata.harisma.utility.service.leavedp;

import java.util.Vector;
import java.util.Date;
import com.dimata.harisma.entity.employee.*;
import com.dimata.harisma.entity.attendance.*;


public class AutomaticLeaveDpUpdater implements Runnable{

    private Vector empVect = new Vector(1,1);
    int i = 0;
    
    public AutomaticLeaveDpUpdater() {
    }

    public void run() 
    {
        System.out.println("\t[AutomaticLeaveDpUpdater] starting...");
        
        Date dt = new Date();
        int currYear = dt.getYear()+1900;
        String where = PstEmployee.fieldNames[PstEmployee.FLD_RESIGNED]+
                       " = " + PstEmployee.NO_RESIGN +
                       " AND MONTH("+PstEmployee.fieldNames[PstEmployee.FLD_COMMENCING_DATE]+") " + 
                       " = "+(dt.getMonth()+1);
        Vector vct = PstEmployee.list(0,0, where, null);
        
        //System.out.println(vct);
        if(vct!=null && vct.size()>0)
        {
            for(int i=0; i<vct.size(); i++)
            {
            	Employee emp = (Employee)vct.get(i);
            	try
                {
	                Date cmDate = emp.getCommencingDate();
	                int cmYear = cmDate.getYear() + 1900;
	                int age = currYear - cmYear;
	                int ALAdd = 0;
	                int LLAdd = 0;
	                int DPAdd = 0;
	
	                /**
	                 * jika lama bekerja kurang dari atau sama
	                 * dengan 10 tahun maka penambahan dilakukan sebanyak 12 cuti 
                         */
	                if(age <= 10)
                        {
	                    ALAdd = 12;
	                }
                        
	                /**
	                 * jika lama bekerja lebih dari 10 tahun maka
	                 * penambahan dilakukan sebanyak 24 cuti 
                         */
	                else
                        {
	                    ALAdd = 24;
	                }
	
                        
	                where = PstLeaveStock.fieldNames[PstLeaveStock.FLD_EMPLOYEE_ID]+"="+emp.getOID();
	                Vector vc = PstLeaveStock.list(0,0, where, null);
                        if(vct!=null && vc.size()>0)
                        {
                            LeaveStock lSt = (LeaveStock)vc.get(0);
                            lSt.setAddAl(ALAdd);
                            lSt.setAlAmount(ALAdd + lSt.getAlAmount());
                            PstLeaveStock.updateExc(lSt);
                        }
                        else
                        {
                            //where = PstLeavePeriod.fieldNames[PstLeavePeriod.FLD_STATUS]+"= "+PstLeavePeriod.emp.getOID();
                            //Vector vc = PstLeaveStock.list(0,0, where, null);
                            LeaveStock lSt = new  LeaveStock();
                            lSt.setAddAl(ALAdd);
                            lSt.setAlAmount(ALAdd);
                            lSt.setEmployeeId(emp.getOID());
                            PstLeaveStock.insertExc(lSt);
                        }
            	}
            	catch(Exception e)
                {
                	System.out.println("Exception processing leave auto : emp : "+emp.getOID()+" : "+e.toString());
            	}

            }
        }
        else
        {
            System.out.println("\t[AutomaticLeaveDpUpdater] no employee...");
        }

        System.out.println("\t[AutomaticLeaveDpUpdater] stopped.");
    }
}
